name: check

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: ">=3.9"
        id: setup-python
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            venv
          key: >-
            pip+venv
            ${{ steps.setup-python.outputs.python-version }}
            ${{ hashFiles(
                'pyproject.toml', 'requirements-dev.txt',
                'requirements-test.txt', '.github/workflows/check.yml'
            ) }}
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: >-
            pre-commit
            ${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Install dependencies
        run: |
          set -euxo pipefail
          python3 -m venv venv
          source venv/bin/activate
          python3 -m pip install -Ur \
            requirements-dev.txt pre-commit~=2.9 gitlint==0.18.0
          pre-commit install-hooks
      - name: Run linters
        run: |
          set -euxo pipefail
          source venv/bin/activate
          rc=0
          gitlint --ignore-stdin \
            --commits "origin/${GITHUB_BASE_REF:-main}..HEAD" \
            || rc=1
          pre-commit run --all-files --color always --show-diff-on-failure \
            || rc1=1
          exit $rc

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python-version: "3.9"
            toxenv: py39
          - python-version: "3.10"
            toxenv: py310
          - python-version: "3.11"
            toxenv: py311
          - python-version: "3.12.0-alpha - 3.12"
            toxenv: py312
          - python-version: "pypy-3.9"
            toxenv: pypy3
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            .tox
          key: >-
            ${{ runner.os }} pip ${{ matrix.python-version }}
            ${{ hashFiles('pyproject.toml', 'requirements-test.txt') }}
      - name: Install dependencies
        run: |
          python3 -m pip install "$(grep ^tox requirements-dev.txt)"
      - name: Run tests
        run: |
          tox -e ${{ matrix.toxenv }} --skip-missing-interpreters false
        env:
          PYTEST_ADDOPTS: --vcr-record=none --color=yes
